{
  "prediction_inconsistency_issue": {
    "problem": "Training vs Inference Inconsistency",
    "training_mechanism": "Uses cumulative probabilities P(Y \u2264 k) via OrdinalLoss",
    "inference_mechanism": "Uses individual probabilities P(Y = k) via argmax",
    "impact": "Model learns ordinal structure but predicts without it",
    "solution": "Use cumulative-based or expected value prediction methods"
  },
  "prediction_methods_available": {
    "argmax": {
      "description": "Current method - argmax over P(Y = k)",
      "mechanism": "torch.argmax(gpcm_probs, dim=-1)",
      "pros": "Simple, fast computation",
      "cons": "Loses ordinal information, inconsistent with training",
      "use_case": "When ordinal structure is not important"
    },
    "cumulative": {
      "description": "GPCM-consistent method - uses P(Y \u2264 k)",
      "mechanism": "Find first k where P(Y \u2264 k) > 0.5 (median)",
      "pros": "Consistent with ordinal loss, respects category ordering",
      "cons": "Slightly more complex computation",
      "use_case": "Educational assessments with ordinal responses"
    },
    "expected": {
      "description": "Expected value method - E[Y] = \u03a3 k * P(Y = k)",
      "mechanism": "torch.sum(gpcm_probs * categories, dim=-1)",
      "pros": "Natural for ordinal data, continuous then discretized",
      "cons": "May not align perfectly with category boundaries",
      "use_case": "When treating categories as continuous scale"
    }
  },
  "prediction_targets": {
    "categorical_accuracy": {
      "description": "Exact category match prediction accuracy",
      "mechanism": "Depends on prediction method selected",
      "threshold": "No threshold for argmax; 0.5 for cumulative; rounding for expected",
      "formula": "categorical_acc = (predicted_category == true_category).mean()",
      "interpretation": "Percentage of responses with exact category prediction",
      "method_dependency": "Results vary significantly by prediction method"
    },
    "ordinal_accuracy": {
      "description": "Educational tolerance accuracy (\u00b11 category)",
      "mechanism": "Allow predictions within \u00b11 category of true response",
      "threshold": "\u00b11 category tolerance (educational assessment standard)",
      "formula": "ordinal_acc = (|predicted_category - true_category| <= 1).mean()",
      "interpretation": "Percentage of responses within educationally acceptable range",
      "method_dependency": "Less sensitive to prediction method due to tolerance"
    }
  },
  "gpcm_prediction_process": {
    "step1": "Generate IRT parameters: \u03b8 (ability), \u03b1 (discrimination), \u03b2 (thresholds)",
    "step2": "Compute GPCM cumulative logits: \u03b3_k = \u03b1(\u03b8 - \u03b2_k)",
    "step3": "Calculate category probabilities: P(Y=k) via cumulative logits",
    "step4": "Categorical prediction: argmax(P(Y=k)) - selects most likely category",
    "step5": "Ordinal evaluation: check if |predicted - actual| <= tolerance"
  },
  "comparison_to_binary": {
    "binary_threshold": "Fixed 0.5 threshold for P(Y=1) vs P(Y=0)",
    "gpcm_categorical": "Dynamic argmax over K categories - no fixed threshold",
    "gpcm_ordinal": "Educational tolerance bands - accounts for partial credit"
  }
}